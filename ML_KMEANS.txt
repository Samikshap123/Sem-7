import pandas as pd 
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans

df = pd.read_csv('/sales_data_sample.csv', encoding='unicode_escape')

df.head()

df.isnull().sum()

df = df.drop(["TERRITORY"],axis=1)

X = df.iloc[:, [3,4]].values

//it ensures that all features have similar scales.K-Means clustering is based on distances between data points. If features are on different scales, the clustering algorithm may give more weight to features with larger scales. This can lead to inaccurate clustering results.

from sklearn.preprocessing import StandardScaler
ss = StandardScaler()
scaled = ss.fit_transform(X)

wcss =[]

for i in range(1,11):
    clustering = KMeans(n_clusters=i, init="k-means++", random_state=42)
    clustering.fit(scaled)
    wcss.append(clustering.inertia_)
    
ks = [1,2,3,4,5,6,7,8,9,10]
plt.plot(ks, wcss, 'bx-')
plt.title("Elbow method")
plt.xticks(ks)
plt.xlabel("K value")
plt.ylabel("WCSS")






