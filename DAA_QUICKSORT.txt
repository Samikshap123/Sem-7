#include<iostream>

using namespace std;

int partition(int * arr, int p, int r){
    int x = arr[r];
    int i = p - 1;
    for(int j = p; j < r; j++){
        if(arr[j] <= x){
            i++;
            swap(arr[i],arr[j]);
        }
    }
    swap(arr[i + 1], arr[r]);
    return i + 1;
}

void quickSort(int * arr, int p, int r){
    if (p < r){
        int q = partition(arr, p, r);
        quickSort(arr, p, q - 1);
        quickSort(arr, q + 1, r);
    }
}

int randomPartition(int * arr, int p, int r){
    int x = arr[r];
    int i = rand() % ((r - p) + 1) + p;
    cout << i << endl;
    for(int j = p; j < r; j++){
        if(arr[j] <= x){
            i++;
            swap(arr[i],arr[j]);
        }
    }
    swap(arr[i + 1], arr[r]);
    return i + 1;
}

void randomizedQuickSort(int * arr, int p, int r){
    if (p < r){
        int q = randomPartition(arr, p, r);
        randomizedQuickSort(arr, p, q - 1);
        randomizedQuickSort(arr, q + 1, r);
    }
}

int main(){
    int n;
    cout << "Enter the number of elements: ";
    cin >> n;
    
    int A[n];  // Declare an array of size n
    
    cout << "Enter " << n << " elements: ";
    for(int i = 0; i < n; i++){
        cin >> A[i];
    }

    randomizedQuickSort(A, 0, n - 1);

    cout << "Sorted array: ";
    for(int i : A){
        cout << i << " ";
    }
    cout << '\n';
    return 0;
}
